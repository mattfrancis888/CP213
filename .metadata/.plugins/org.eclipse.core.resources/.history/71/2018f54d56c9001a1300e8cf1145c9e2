package cp213;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DecimalFormat;

@SuppressWarnings("serial")
public class RTSameView extends JPanel {
	  private final RTModel model;
	  
	   private class AverageButtonListener implements ActionListener {
			/**
			 * Determines whether values are incremented (+) or decremented (-).
			 */

			@Override
			public void actionPerformed(final ActionEvent evt) {
				double avg = (RTSameView.this.model.getBase() + RTSameView.this.model.getHeight()) / 2;
				RTSameView.this.model.setBase(
						avg);
				RTSameView.this.model.setHeight(
						avg);
				
				
			
			}
		  }
	   
	   private class BaseListener implements PropertyChangeListener {
		   //If base value, this gets triggered

			@Override
			public void propertyChange(final PropertyChangeEvent evt) {
				RTSameView.this.renderCommonVal();
				RTSameView.this.renderHypoVal();
			}
		   }
	   
	   private class IncrementDecrementBothButtonListener implements ActionListener {
				/**
				 * Determines whether values are incremented (+) or decremented (-).
				 */

			private int direction = 0;
			
			public IncrementDecrementBothButtonListener(final int direction) {
			    this.direction = direction;
			}
			
				@Override
				public void actionPerformed(final ActionEvent evt) {
			
					RTSameView.this.model.setBase(
							RTSameView.this.model.getBase() + this.direction);
					RTSameView.this.model.setHeight(
							RTSameView.this.model.getHeight() + this.direction);
					
					
				
				}
			  }
	   
	    private static final DecimalFormat f = new DecimalFormat("###.##");
	   private final JButton avgButton = new JButton("AVERAGE");
	   private final JLabel common = new JLabel("Common: ");
	   private final JLabel commonVal = new JLabel(" ");
	   private final JLabel hypo = new JLabel("Hypotenuse: ");
	   private final JLabel hypoVal = new JLabel(" ");
	    private final JButton down = new JButton("-");
	    private final JButton up = new JButton("+");
	
	   private void layoutView() {
			this.setLayout(new GridLayout(4, 3));
		
			this.add(new JLabel("Reset: "));
			this.add(this.avgButton);
			this.add(common);
			this.add(commonVal);
			this.add(hypo);
			this.add(hypoVal);
			this.add(new JLabel("Increment/Decrement at the same time: "));
			this.add(up);
			this.add(down);
	   }
	   
	   private void registerListeners() {
			// Add widget listeners.
			this.avgButton.addActionListener(new AverageButtonListener());
			this.model.addPropertyChangeListener(RTModel.BASE_CHANGE,
					new BaseListener());
			this.up.addActionListener(new IncrementDecrementBothButtonListener(1));
			this.down.addActionListener(new IncrementDecrementBothButtonListener(-1));
		
	   }
	   
	   public void renderHypoVal() {
			RTSameView.this.hypoVal.setText(RTSameView.f
				    .format(RTSameView.this.model.getHypotenuse()));
				
	   }
	   
	   public void renderCommonVal() {
	
		   if(RTSameView.this.model.getBase() == RTSameView.this.model.getHeight()) {
			   
				RTSameView.this.commonVal.setText(RTSameView.f.format(RTSameView.this.model.getBase()));
			} else {
				RTSameView.this.commonVal.setText(" ");
			}
	   }
	   
	   
	   
	   public RTSameView(final RTModel newModel) {
			this.model = newModel;
			this.layoutView();
			this.registerListeners();
		
			// Initialize the view labels.
			renderCommonVal();
			renderHypoVal();
		}
}
